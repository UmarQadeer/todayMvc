{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/forgot/forgot.component.css","webpack:///./src/app/forgot/forgot.component.html","webpack:///./src/app/forgot/forgot.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mainpage/mainpage.component.css","webpack:///./src/app/mainpage/mainpage.component.html","webpack:///./src/app/mainpage/mainpage.component.ts","webpack:///./src/app/myservice.service.ts","webpack:///./src/app/page2/page2.component.css","webpack:///./src/app/page2/page2.component.html","webpack:///./src/app/page2/page2.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/show/show.component.css","webpack:///./src/app/show/show.component.html","webpack:///./src/app/show/show.component.ts","webpack:///./src/app/showreg/showreg.component.css","webpack:///./src/app/showreg/showreg.component.html","webpack:///./src/app/showreg/showreg.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-mainpage></app-mainpage>\"","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n    Event,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rForms';\n    constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n        this._router.events.subscribe((event: Event) => {\n            this.navigationInterceptor(event);\n        });\n    }\n    private navigationInterceptor(event: Event): void {\n        if (event instanceof NavigationStart) {\n            this._loadingBar.start();\n        }\n        if (event instanceof NavigationEnd) {\n            this._loadingBar.complete();\n        }\n        if (event instanceof NavigationCancel) {\n            this._loadingBar.stop();\n        }\n        if (event instanceof NavigationError) {\n            this._loadingBar.stop();\n        }\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router'\nimport { AppComponent } from './app.component';\nimport { Page2Component } from './page2/page2.component';\nimport { MainpageComponent } from './mainpage/mainpage.component';\nimport { MyserviceService } from './myservice.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ShowComponent } from './show/show.component';\nimport { EditComponent } from './edit/edit.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ShowregComponent } from './showreg/showreg.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport {SlimLoadingBarModule} from 'ng2-slim-loading-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Page2Component,\n    MainpageComponent,\n    ShowComponent,\n    EditComponent,\n    LoginComponent,\n    RegisterComponent,\n    ShowregComponent,\n    ForgotComponent\n  ],\n  imports: [HttpClientModule,\n    SlimLoadingBarModule.forRoot(),\n    BrowserModule,\n      ReactiveFormsModule,\n      RouterModule.forRoot([\n          {\n              path:' ',\n              component:MainpageComponent\n          },\n          {\n              path: '', redirectTo: 'login',\n              pathMatch:'full'\n          },\n          // {\n          //     path:'**',\n          //     component:LoginComponent\n          // }, \n          {\n              path:'page2',\n              component:Page2Component\n          },\n          {\n              path:'show',\n              component:ShowComponent\n          },\n          {\n              path:'showreg',\n              component:ShowregComponent\n          },\n          {\n              path:'login',\n              component:LoginComponent\n          },\n          {\n              path:'register',\n              component:RegisterComponent\n          },\n          {\n              path:'forgot',\n              component:ForgotComponent\n          },\n          {\n              path:'edit/:id',\n              component:EditComponent\n          }\n          ])\n  ],\n  providers: [MyserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name [(ngModel)] = \\\"student.name\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\"\\n             class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                Name is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Standard </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"standard\\\" #standard [(ngModel)] = \\\"student.standard\\\" />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['standard'].invalid && (angForm.controls['standard'].dirty || angForm.controls['standard'].touched)\\\"\\n             class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['standard'].errors.required\\\">\\n                Standard is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Age </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"age\\\" #age [(ngModel)] = \\\"student.age\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['age'].invalid && (angForm.controls['age'].dirty || angForm.controls['age'].touched)\\\"\\n             class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['age'].errors.required\\\">\\n                Age is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"updateStudent(name.value, standard.value, age.value)\\\" \\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n            class=\\\"btn btn-primary\\\">Update Student</button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { MyserviceService } from '../myservice.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n    student: any = {};\n    angForm: FormGroup;\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private bs: MyserviceService,\n              private fb: FormBuilder) {\n      this.createForm();\n  }\n\n    createForm() {\n        this.angForm = this.fb.group({\n            name: ['', Validators.required ],\n            standard: ['', Validators.required ],\n            age: ['', Validators.required ]\n        });\n    }\n  ngOnInit() {\n      this.route.params.subscribe(params => {\n          this.bs.editStudent(params['id']).subscribe(res => {\n              this.student = res;\n          });\n      });\n  }\n    updateStudent(name, standard, age) {\n        this.route.params.subscribe(params => {\n            this.bs.updateStudent(name, standard , age, params['id']);\n            this.router.navigate(['student']);\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC9mb3Jnb3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">Forgot Password</h3></div>\\r\\n    <form [formGroup]=\\\"login_form\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-md-4\\\">Enter Name</label>\\r\\n            <input type=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"login_form.controls['name'].invalid && (login_form.controls['name'].dirty || login_form.controls['name'].touched)\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"login_form.controls['name'].errors.required\\\">\\r\\n                Name is required.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-md-4\\\">Enter New Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" #password />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"login_form.controls['password'].invalid && (login_form.controls['password'].dirty || login_form.controls['password'].touched)\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"login_form.controls['password'].errors.required\\\">\\r\\n                Enter New Password.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button (click)=\\\"updateReg(name.value,password.value)\\\" [disabled]=\\\"login_form.pristine || login_form.invalid && submitted\\\"\\r\\n                    class=\\\"btn btn-primary\\\">Re-new Password</button>\\r\\n            <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\r\\n                <!--<div>Enter New Password.</div>-->\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MyserviceService } from '../myservice.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport Register from \"../register\";\n\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css']\n})\nexport class ForgotComponent implements OnInit {\n    login_form: FormGroup;\n    submitted = false;\n    invalidLogin = false;\n  constructor(private umar: FormBuilder,private route: ActivatedRoute,private myservice: MyserviceService, private router:Router) {\n\n          this.createForm();\n      }\n      createForm()\n      {\n          this.login_form = this.umar.group({\n              name: ['', Validators.required],\n              password:['', Validators.required],\n          });\n      }\n    x=0;\n    updateReg(name,password) {\n        this.myservice.getRegister().subscribe((data:Register[]) => {\n            //alert(JSON.stringify(data));\n            for(let key in data){\n                let val=data[key];\n                let a=JSON.stringify(val);\n                let v=JSON.parse(a);\n                if(v[\"name\"]==name)\n                {\n                    this.x=1;\n                    break;\n                }\n            }\n            if(this.x==1)\n                this.route.params.subscribe(params => {\n                    this.myservice.updateReg(name,password);\n                    this.router.navigate(['login']);\n                });\n            else {\n                alert(\"User Not Available\");\n                this.invalidLogin = true;\n            }\n\n        });\n    }\n    ngOnInit() {}\n    }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">LOGIN</h3></div>\\r\\n    <form [formGroup]=\\\"login_form\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-md-4\\\">Mobile No</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" #mobile />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"login_form.controls['mobile'].invalid && (login_form.controls['mobile'].dirty || login_form.controls['mobile'].touched)\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"login_form.controls['mobile'].errors.required\\\">\\r\\n                Mobile No. is required.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-md-4\\\">Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" #password />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"login_form.controls['password'].invalid && (login_form.controls['password'].dirty || login_form.controls['password'].touched)\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"login_form.controls['password'].errors.required\\\">\\r\\n                Password is required.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button (click)=\\\"loginUser(mobile.value, password.value)\\\" [disabled]=\\\"login_form.pristine || login_form.invalid &&                  submitted\\\"\\r\\n                class=\\\"btn btn-primary\\\">Login</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-primary\\\" > Register </button></a>\\r\\n            &nbsp;&nbsp;\\r\\n            <a routerLink=\\\"/forgot\\\"><button class=\\\"btn btn-primary\\\" > Forgot </button></a>\\r\\n            <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\r\\n                <!--<div>Invalid credentials.</div>-->\\r\\n            </div>\\r\\n\\r\\n        <!--<div class=\\\"btn-group btn-group-justified\\\">-->\\r\\n            <!--<a routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>-->\\r\\n            <!--<a routerLink=\\\"/forgot\\\" class=\\\"btn btn-primary\\\">Forgot</a>-->\\r\\n        <!--</div>-->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!--- fetching above form data as group in json format-->\\r\\n        <div class=\\\"well\\\">\\r\\n        {{login_form.value | json}}\\r\\n        <!--- fetching above form data as single-->\\r\\n        <!--{{mobile.value }}-->\\r\\n        </div>\\r\\n    </form>\\r\\n    </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MyserviceService } from '../myservice.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {  Router } from '@angular/router';\nimport Register  from  '../register'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    login_form: FormGroup;\n    submitted = false;\n    invalidLogin = false;\n\n    constructor(private umar: FormBuilder, private myservice: MyserviceService, private router:Router) {\n        this.createForm();\n    }\n\n    createForm() {\n        this.login_form = this.umar.group({\n            mobile: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\nx=0;\n    loginUser(mobile, password) {\n\n       // this.myservice.loginUser(mobile, password);\n       //       this.submitted = true;\n       //   if (this.login_form.invalid) {\n       //       return;\n       //   }\n       //   if (this.login_form.controls.mobile.value == '11' && this.login_form.controls.password.value == '11') {\n       //       this.router.navigate(['page2']);\n       //   } else {\n       //       this.invalidLogin = true;\n       //   }\n\n        this.myservice.getRegister().subscribe((data:Register[]) => {\n            //alert(JSON.stringify(data));\n            for(let key in data){\n                let val=data[key];\n                let a=JSON.stringify(val);\n                let v=JSON.parse(a);\n                if(v[\"mobile\"]==mobile && v['password']==password)\n                {\n                    this.x=1;\n                    break;\n                }\n            }\n            if(this.x==1)\n                this.router.navigate(['page2']);\n            else {\n                     alert(\"invalid credentials\");\n                      this.invalidLogin = true;\n                  }\n\n        });\n\n\n    }\n\n\n    ngOnInit() {\n    }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5wYWdlL21haW5wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" <ng2-slim-loading-bar color=\\\"red\\\" height='3px'></ng2-slim-loading-bar>\\n<div class=\\\"well\\\" style=\\\"text-align: center\\\">\\n    <!--<a routerLink=\\\"/page2\\\">Fill Form</a>&nbsp;&nbsp;-->\\n    <!--<a routerLink=\\\"/login\\\">Login</a>&nbsp;&nbsp;-->\\n    <a routerLink=\\\"/show\\\">Show</a>&nbsp;&nbsp;\\n    <a routerLink=\\\"/showreg\\\">Show REG</a>&nbsp;&nbsp;\\n    <!--<a routerLink=\\\"/register\\\">Register</a>&nbsp;&nbsp;-->\\n    <!--<a routerLink=\\\"/forgot\\\">Forgot</a>&nbsp;&nbsp;-->\\n</div>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n\n\n  constructor() { }\n\nngOnInit() {\n\n\n\n}\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n    uri = 'http://localhost:8080/tasks';\n    urii = 'http://localhost:8080/user';\n  // uri = 'https://umar01.herokuapp.com/tasks';\n  // urii = 'https://umar01.herokuapp.com/user';\n//   uri = 'tasks';\n//   urii = 'user';\n\n  constructor(private http:HttpClient) {}\n\n\n    addUser(name,mobile, password) {\n        const obj = {\n            name: name,\n            mobile: mobile,\n            password: password\n        };\n        console.log(obj);\n        this.http.post(`${this.urii}`, obj)\n            .subscribe(res => console.log('Done'));\n    }\n\n\n\n\n\n\n\n    loginUser(mobile, password) {\n        const obj = {\n            mobile: mobile,\n            password: password\n        };\n        console.log(obj);\n        this.http.get(`${this.urii}/${mobile}`)\n            .subscribe(res => console.log('Done'));\n    }\n\n    getStudent() {\n        return this\n            .http\n            .get(`${this.uri}`);\n    }\n\n    getRegister() {\n        return this\n            .http\n            .get(`${this.urii}`);\n    }\n\n      addStudent(name, standard, age) {\n          const obj = {\n              name: name,\n              standard: standard,\n              age: age\n          };\n          console.log(obj);\n          this.http.post(`${this.uri}`, obj)\n              .subscribe(res => console.log('Done'));\n  }\n    editStudent(id) {\n        return this\n            .http\n            .get(`${this.uri}/${id}`);\n    }\n    updateReg(name,password) {\n        //alert(name+\" \"+password)\n        const obj = {\n            password:password,\n        };\n        this\n            .http\n            .put(`${this.urii}/${name}`, obj)\n            .subscribe(res => console.log('Done'));\n    }\n    updateStudent(name, standard, age, id) {\n\n        const obj = {\n            name: name,\n            standard: standard,\n            age: age\n        };\n        this\n            .http\n            .put(`${this.uri}/${id}`, obj)\n            .subscribe(res => console.log('Done'));\n    }\n\n    deleteStudent(id) {\n        return this\n            .http\n            .delete(`${this.uri}/${id}`);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UyL3BhZ2UyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">FILL THE FORM</h3></div>\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                Name is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Standard </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"standard\\\" #standard />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['standard'].invalid && (angForm.controls['standard'].dirty || angForm.controls['standard'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['standard'].errors.required\\\">\\n                Standard is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Age </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"age\\\" #age />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['age'].invalid && (angForm.controls['age'].dirty || angForm.controls['age'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['age'].errors.required\\\">\\n                Age is required.\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"addStudent (name.value, standard.value, age.value)\\\" \\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n            class=\\\"btn btn-primary\\\">Add Student</button>\\n        </div>\\n        <!--- fetching above form data as group in json format-->\\n    {{angForm.value | json}}\\n    <!--- fetching above form data as single-->\\n    {{name.value }}\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MyserviceService } from '../myservice.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-page2',\n  templateUrl: './page2.component.html',\n  styleUrls: ['./page2.component.css']\n})\nexport class Page2Component implements OnInit {\n\n    angForm: FormGroup;\n  constructor(private myservice: MyserviceService,private umar: FormBuilder,private router:Router) {\n      this.createForm();\n  }\n    createForm() {\n        this.angForm = this.umar.group({\n            name: ['', Validators.required ],\n            standard: ['', Validators.required ],\n            age: ['', Validators.required ]\n        });\n    }\n            addStudent(name, standard, age) {\n            this.myservice.addStudent(name, standard, age);\n            alert(\"submitted\");\n                this.router.navigate(['login']);\n  }\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">REGISTER</h3></div>\\n  <form [formGroup]=\\\"reg_form\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">User Name</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name />\\n      </div>\\n      <div *ngIf=\\\"reg_form.controls['name'].invalid && (reg_form.controls['name'].dirty || reg_form.controls['name'].touched)\\\"\\n          class=\\\"alert alert-info\\\">\\n          <div *ngIf=\\\"reg_form.controls['name'].errors.required\\\">\\n              User Name. is required.\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Mobile No</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" #mobile />\\n    </div>\\n    <div *ngIf=\\\"reg_form.controls['mobile'].invalid && (reg_form.controls['mobile'].dirty || reg_form.controls['mobile'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"reg_form.controls['mobile'].errors.required\\\">\\n            Mobile is required.\\n        </div>\\n    </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\"> Set New Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" #password />\\n      </div>\\n      <div *ngIf=\\\"reg_form.controls['password'].invalid && (reg_form.controls['password'].dirty || reg_form.controls['password'].touched)\\\"\\n          class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"reg_form.controls['password'].errors.required\\\">\\n              Password is required.\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n          <button (click)=\\\"addUser(name.value, mobile.value, password.value)\\\" [disabled]=\\\"reg_form.pristine || reg_form.invalid\\\"\\n              class=\\\"btn btn-primary\\\">Register</button>\\n      </div>\\n      <div class=\\\"well\\\">\\n      <!--- fetching above form data as group in json format-->\\n      {{reg_form.value | json}}\\n      <!--- fetching above form data as single-->\\n      <!--{{mobile.value }}-->\\n      </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormBuilder,  Validators } from \"@angular/forms\";\nimport { MyserviceService } from '../myservice.service';\nimport {  Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    reg_form: FormGroup;\n  constructor(private umar: FormBuilder,private myservice: MyserviceService,private router:Router ) {\n      this.createForm();\n  }\n\n    createForm() {\n        this.reg_form = this.umar.group({\n            name: ['', Validators.required ],\n            mobile: ['', Validators.required ],\n            password: ['', Validators.required ]\n        });\n    }\n\n    addUser(name, mobile, password) {\n        this.myservice.addUser(name, mobile, password);\n        alert(\"submitted\");\n        this.router.navigate(['login']);\n    }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3cvc2hvdy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">LISTING ALL USER</h3></div>\\n<table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n        <td>Name</td>\\n        <td>Standard</td>\\n        <td>Age</td>\\n        <td colspan=\\\"2\\\">Actions</td>\\n    </tr>\\n    </thead>\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let student of students\\\">\\n        <td>{{ student.name }}</td>\\n        <td>{{ student.standard }}</td>\\n        <td>{{ student.age }}</td>\\n        <td><a [routerLink]=\\\"['/edit',student._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n        <td><a (click)=\\\"[deleteStudent(student._id)]\\\" class=\\\"btn btn-danger\\\">Delete</a></td>\\n    </tr>\\n    </tbody>\\n</table>\"","    import { Component, OnInit } from '@angular/core';\n    import { MyserviceService } from '../myservice.service';\n    import Student  from  '../student'\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n    students: Student[];\n  constructor(private umar: MyserviceService) { }\n\n  ngOnInit() {\n      this.umar\n          .getStudent()\n          .subscribe((data: Student[]) => {\n              this.students = data;\n          });\n  }\n  \n  deleteStudent(id) {\n    this.umar.deleteStudent(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3dyZWcvc2hvd3JlZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"well\\\"><h3 style=\\\"text-align: center;color: tomato\\\">LISTING ALL REGISTER</h3></div>\\n<table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n        <td>Name</td>\\n        <td>Mobile</td>\\n        <td>Password</td>\\n        <!--<td colspan=\\\"2\\\">Actions</td>-->\\n    </tr>\\n    </thead>\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let register of registers\\\">\\n        <td>{{ register.name }}</td>\\n        <td>{{ register.mobile }}</td>\\n        <td>{{ register.password }}</td>\\n        <!--<td><a [routerLink]=\\\"['/edit',student._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>-->\\n        <!--<td><a (click)=\\\"[deleteStudent(student._id)]\\\" class=\\\"btn btn-danger\\\">Delete</a></td>-->\\n    </tr>\\n    </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { MyserviceService } from '../myservice.service';\nimport Register  from  '../register'\n@Component({\n  selector: 'app-showreg',\n  templateUrl: './showreg.component.html',\n  styleUrls: ['./showreg.component.css']\n})\nexport class ShowregComponent implements OnInit {\n    registers: Register[];\n  constructor(private umar: MyserviceService) { }\n\n  ngOnInit() {\n      this.umar\n          .getRegister()\n          .subscribe((data: Register[]) => {\n              this.registers = data;\n              // console.log(this.registers[1]);\n          });\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}